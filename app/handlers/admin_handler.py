from telebot import types
from app.user_manager import UserManager

user_manager = UserManager()

def register_admin_handlers(bot):

    @bot.message_handler(func=lambda m: m.text == '‚öôÔ∏è –ê–¥–º–∏–Ω –º–µ–Ω—é')
    def adm_panel(message):
        markup = types.InlineKeyboardMarkup(row_width=3)
        spam = types.InlineKeyboardButton("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞", callback_data="spam") 
        add_admin = types.InlineKeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="add_admin") 
        del_admin = types.InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="del_admin") 
        users = types.InlineKeyboardButton("üë´ –ö–æ–ª-–≤–æ –Æ–∑–µ—Ä–æ–≤", callback_data="users")
        markup.add(spam, users)
        markup.add(add_admin, del_admin)
        bot.send_message(message.chat.id, "üëãüèø –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω –º–µ–Ω—é", reply_markup=markup)

    
    @bot.callback_query_handler(func=lambda call: call.data == "users")
    def get_all_users(call):
        user_id = call.from_user.id
        if not user_manager.is_admin(user_id):
            bot.send_message(call.message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
            return
        all_users = len(user_manager.get_users())
        bot.send_message(call.message.chat.id, f"üìä –ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤ - {all_users}")
        
    @bot.callback_query_handler(func=lambda call: call.data == "spam")
    
    def start_broadcast(call):
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        if not user_manager.is_admin(user_id):
            bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
            return

        msg = bot.send_message(chat_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        bot.register_next_step_handler(msg, send_broadcast)

    def send_broadcast(message):
        text_to_send = message.text
        status_msg = bot.send_message(message.chat.id, "üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏...")

        users = user_manager.get_users()

        for uid in users:
            try:
                bot.send_message(uid, text_to_send)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {uid}: {e}")

        try:
            bot.delete_message(message.chat.id, status_msg.message_id)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞—Å—Å—ã–ª–∫–µ: {e}")

        bot.send_message(message.chat.id, f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    @bot.callback_query_handler(func=lambda call: call.data in ["add_admin", "del_admin"])
    def add_del_admin(call):
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        if not user_manager.is_admin(user_id):
            bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
            return

        action = call.data
        msg = bot.send_message(chat_id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'):")
        bot.register_next_step_handler(msg, process_admin_id_step, action)

    def process_admin_id_step(message, action):
        text = (message.text or "").strip()
        chat_id = message.chat.id

        if text.lower() in ("–æ—Ç–º–µ–Ω–∞", "cancel"):
            bot.send_message(chat_id, "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return

        try:
            target_id = int(text)
        except ValueError:
            bot.send_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID.")
            return

        if not user_manager.is_admin(message.from_user.id):
            bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
            return

        try:
            if action == "add_admin":
                user_manager.add_admin(target_id)
                bot.send_message(chat_id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω")
            elif action == "del_admin":
                user_manager.remove_admin(target_id)
                bot.send_message(chat_id, f"‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id} —Å–Ω—è—Ç—ã")
            else:
                bot.send_message(chat_id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤: {e}")
            bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ë–î")